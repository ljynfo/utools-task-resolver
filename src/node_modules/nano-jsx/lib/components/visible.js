"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Visible = void 0;
const core_1 = require("../core");
const component_1 = require("../component");
class Visible extends component_1.Component {
    constructor() {
        super(...arguments);
        this.isVisible = false;
    }
    didMount() {
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    observer.disconnect();
                    this.isVisible = true;
                    this.update();
                }
            });
        }, { threshold: [0, 1] });
        observer.observe(this.elements[0]);
    }
    render() {
        if (!this.isVisible) {
            return core_1.h('div', { 'data-visible': false, visibility: 'hidden' });
        }
        else {
            if (this.props.onVisible)
                this.props.onVisible();
            return core_1.render(this.props.component || this.props.children[0]);
        }
    }
}
exports.Visible = Visible;
//# sourceMappingURL=visible.js.map