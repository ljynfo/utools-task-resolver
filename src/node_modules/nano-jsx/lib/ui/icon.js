"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Icon = void 0;
const component_1 = require("../component");
const core_1 = require("../core");
const _helpers_1 = require("./_helpers");
class Icon extends component_1.Component {
    didUnmount() {
        // not sure if I want to remove the css, since there might be another Icon with the same styles.
        // const el = document.querySelector(`[data-css-hash*="${this.cssHash}"]`)
        // if (el) el.remove()
    }
    render() {
        const _a = this.props, { src, size = 16, active = true, color = '#6204EE', style = '' } = _a, rest = __rest(_a, ["src", "size", "active", "color", "style"]);
        // @ts-ignore
        const children = this.props.children;
        this.cssHash = core_1.strToHash(active + color + size.toString());
        const colors = {
            active: color,
            inactive: '#00000070'
        };
        const styles = `
    i.icon-${this.cssHash} {
      width: ${size}px;
      height: ${size}px;
      display: inline-block;
      content: '';

      /*-webkit-mask: url(YOUR_SVG_URL) no-repeat 50% 50%;
      mask: url(YOUR_SVG_URL) no-repeat 50% 50%;*/

      -webkit-mask-size: cover;
      mask-size: cover; 

      background-color: ${colors.active};
    }

    i.icon-${this.cssHash}.icon_inactive-${this.cssHash} {
      background-color: ${colors.inactive};
    }
    `;
        _helpers_1.addStylesToHead(styles, this.cssHash);
        // const iconStyle = `-webkit-mask: url(/dev/font-awesome/ellipsis-v-solid.svg) no-repeat 50% 50%;mask: url(/dev/font-awesome/ellipsis-v-solid.svg) no-repeat 50% 50%;`
        const iconStyle = `-webkit-mask: url(${src || children}) no-repeat 50% 50%; mask: url(${src || children}) no-repeat 50% 50%;`;
        const classes = [`icon-${this.cssHash}`];
        if (!active)
            classes.push(`icon_inactive-${this.cssHash}`);
        const icon = core_1.h('i', Object.assign(Object.assign({ class: classes.join(' ') }, rest), { style: iconStyle + style }));
        return icon;
    }
}
exports.Icon = Icon;
//# sourceMappingURL=icon.js.map