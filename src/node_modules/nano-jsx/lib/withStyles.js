"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withStyles = void 0;
const core_1 = require("./core");
const component_1 = require("./component");
const fragment_1 = require("./fragment");
const helmet_1 = require("./components/helmet");
const withStyles = (styles) => (WrappedComponent) => {
    return class extends component_1.Component {
        render() {
            const _a = this.props, { children } = _a, rest = __rest(_a, ["children"]);
            const helmet = core_1.h(helmet_1.Helmet, null, core_1.h('style', null, styles.toString()));
            const component = children && children.length > 0
                ? core_1.h(WrappedComponent, Object.assign({}, rest), children)
                : core_1.h(WrappedComponent, Object.assign({}, this.props));
            return core_1.h(fragment_1.Fragment, null, helmet, component);
            // same in JSX
            // return (
            //   <Fragment>
            //     <Helmet>
            //       <style>{styles.toString()}</style>
            //     </Helmet>
            //     {children && children.length > 0 ? (
            //       <WrappedComponent {...rest}>{children}</WrappedComponent>
            //     ) : (
            //       <WrappedComponent {...this.props} />
            //     )}
            //   </Fragment>
            // )
        }
    };
};
exports.withStyles = withStyles;
//# sourceMappingURL=withStyles.js.map